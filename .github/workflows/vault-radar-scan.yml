name: Vault Radar Scan


env:
 FETCH_DEPTH: 0


on:
 pull_request:
   branches: [ main ]
 push:
   branches:
     - "main"


jobs:
 vault-radar:
   runs-on: ubuntu-latest


   steps:
   - name: Checkout code
     uses: actions/checkout@v4
     with:
       fetch-depth: ${{ env.FETCH_DEPTH }}


   - name: Run Vault Radar
     env:
       VAULT_RADAR_LICENSE: ${{ secrets.VAULT_RADAR_LICENSE }}
       HCP_CLIENT_ID: ${{ secrets.HCP_CLIENT_ID }}
       HCP_CLIENT_SECRET: ${{ secrets.HCP_CLIENT_SECRET }}
       HCP_PROJECT_ID: ${{ secrets.HCP_PROJECT_ID }}
     run: |
       set -x


       curl https://releases.hashicorp.com/vault-radar/0.11.0/vault-radar_0.11.0_linux_amd64.zip -o vault-radar_0.11.0.zip
       unzip vault-radar_0.11.0.zip -d vault-radar_0.11.0
       mv vault-radar_0.11.0/vault-radar .

       chmod +x vault-radar


       if [[ "${{ github.event_name }}" == "pull_request" ]];
       then
         if [[ "${{ env.FETCH_DEPTH }}" == "0" ]];
         then
           head_ref="${{ github.event.pull_request.head.sha }}" 
           base_ref="${{ github.event.pull_request.base.sha }}"
           ref_name="${{ github.head_ref }}"
         fi
         ./vault-radar scan ci pr \
           --head-ref ${head_ref} \
           --base-ref ${base_ref} \
           --ref-name ${ref_name} \
           -s high \
           -o vault-radar.jsonl \
           -l vault-radar.log \
           --skip-ignored \
           --pretty=gha_pr
       else
         ./vault-radar scan ci tip -s high -o vault-radar.jsonl -l vault-radar.log --pretty=gha
       fi


   - name: debugging
     if:  failure()
     run: |
       cat vault-radar.log
       cat vault-radar.jsonl
