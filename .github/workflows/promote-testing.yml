name: Promotion Testing

on:
  workflow_dispatch:

jobs:
  check-user:
    name: Validate Team
    runs-on: ubuntu-latest
    steps:
      - name: Check user permissions
        uses: tspascoal/get-user-teams-membership@v2
        id: teamAffiliation1
        with:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          username: ${{ github.actor }}
          team: Team Team
      - name: Debug Output
        env:
          output: ${{ steps.teamAffiliation1.outputs.isTeamMember }}
          teams: ${{ steps.teamAffiliation1.outputs.teams }}
        run: |
          echo $output
          echo $teams
      - name: Abort workflow
        if: ${{ steps.teamAffiliation1.outputs.isTeamMember == 'false' }}
        run: |
          echo "You do not have permission to run this workflow. Only members of the GitHub team Team Team may run this workflow."
          exit 1
      - name: Check user permissions 2
        uses: tspascoal/get-user-teams-membership@v2
        id: teamAffiliation2
        with:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          username: ${{ github.actor }}
          team: Empty Team
      - name: Debug Output
        env:
          output: ${{ steps.teamAffiliation2.outputs.isTeamMember }}
          teams: ${{ steps.teamAffiliation2.outputs.teams }}
        run: |
          echo $output
          echo $teams
      - name: Abort workflow
        if: ${{ steps.teamAffiliation2.outputs.isTeamMember == 'false' }}
        run: |
          echo "You do not have permission to run this workflow. Only members of the GitHub team Empty Team may run this workflow."
          exit 1
  validate-branch:
    name: Validate branch name
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get version
        id: vars
        run: echo "VERSION=$(cat version/VERSION)" >> $GITHUB_OUTPUT
      - name: Validate Branch Name
        env:
          BRANCH: ${{ github.ref_name }}
          VERSION: ${{ steps.vars.outputs.version }}
          EXPECTED: ${{ format('{0}{1}', 'release/v', steps.vars.outputs.version) }}
        if: ${{ env.BRANCH != env.EXPECTED }}
        run: |
          echo Improper branch name: $BRANCH
          echo Expected branch name: $EXPECTED
          exit 1
  staging:
    runs-on: ubuntu-latest
    needs: check-user
    steps:
      - uses: actions/checkout@v3
      - name: Get version
        id: vars
        run: echo "VERSION=$(cat version/VERSION)" >> $GITHUB_OUTPUT      
      - name: Validate Branch Name
        env:
          BRANCH: ${{ github.ref_name }}
          VERSION: ${{ steps.vars.outputs.version }}
          EXPECTED: ${{ format('{0}{1}', 'release/v', steps.vars.outputs.version) }}
        if: ${{ env.BRANCH != env.EXPECTED }}
        run: |
            echo Improper branch name: $BRANCH
            echo Expected branch name: $EXPECTED
            exit 1
      - name: Promote
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          VERSION: ${{ steps.vars.outputs.version }}
        run: |
          echo "$GITHUB_CONTEXT"
          echo "$VERSION"
  test-run-script:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Script
        run: |
            pwd
            ls
            chmod +x .github/workflows/test-script.sh
            ./.github/workflows/test-script.sh
